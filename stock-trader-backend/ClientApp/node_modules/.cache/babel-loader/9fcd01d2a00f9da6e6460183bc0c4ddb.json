{"ast":null,"code":"var _jsxFileName = \"/Users/aryemans/stock-trader/stock-trader-backend/stock-trader-backend/ClientApp/src/components/SellStock.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SellStock() {\n  _s();\n\n  const history = useHistory();\n  const userRole = Cookies.get('UserRole');\n  const [quantity, setQuantity] = useState(0);\n  const [price, setPrice] = useState(0);\n  const [limitPrice, setLimitPrice] = useState(0);\n  const [limitQuantity, setLimitQuantity] = useState(0);\n  const [expireDate, setExpireDate] = useState('');\n  const location = useLocation();\n  const stock_ticker = location.state.stock;\n\n  priceQuery = async () => {\n    const response = await fetch(`/`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        stock_ticker: stock_ticker\n      })\n    });\n    const data = await response.json();\n    setPrice(data);\n  };\n\n  const handleSellStocks = () => {\n    const sellStockUrl = \"/users/sell-stock\";\n    const body = {\n      stock_ticker: stock_ticker,\n      username: localStorage.getItem(\"username\"),\n      quantity: parseInt(quantity)\n    };\n    const headers = {\n      \"Content-Type\": \"application/json\"\n    };\n    const requestOptions = {\n      method: \"POST\",\n      headers: headers,\n      body: JSON.stringify(body)\n    };\n    fetch(sellStockUrl, requestOptions).then(response => {\n      if (!response.ok) {\n        throw new Error(\"Failed to sell stocks\");\n      }\n\n      if (response.ok) {\n        alert('Stock sold successfully!');\n        history.push('/assets');\n      } // handle successful response here\n\n    }).catch(error => {\n      alert(error.message);\n    });\n  };\n\n  const handleSetLimitOrder = () => {\n    const setLimitOrderUrl = \"/users/limit-order-sell\";\n    const body = {\n      stock_ticker: stock_ticker,\n      username: localStorage.getItem(\"username\"),\n      quantity: parseInt(quantity),\n      price: limitPrice,\n      expire_date: expireDate\n    };\n    const headers = {\n      \"Content-Type\": \"application/json\"\n    };\n    const requestOptions = {\n      method: \"POST\",\n      headers: headers,\n      body: JSON.stringify(body)\n    };\n    fetch(setLimitOrderUrl, requestOptions).then(response => {\n      if (!response.ok) {\n        throw new Error(\"Failed to set limit order\");\n      }\n\n      if (response.ok) {\n        alert('Limit order set successfully!');\n        history.push('/assets');\n      } // handle successful response here\n\n    }).catch(error => {\n      alert(error.message);\n    });\n  };\n\n  if (userRole === \"user\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Sell Stock \", stock_ticker, \" \", price.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Quantity:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: quantity,\n            onChange: event => setQuantity(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSellStocks,\n          children: \"Sell\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Set Limit Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Quantity:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: limitQuantity,\n            onChange: event => setLimitQuantity(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Price:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: limitPrice,\n            onChange: event => setLimitPrice(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Expire Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: expireDate,\n            onChange: e => setExpireDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSetLimitOrder,\n          children: \"Set Limit Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this);\n  } else {\n    history.push(\"/login\");\n  }\n}\n\n_s(SellStock, \"/euW5qp+yTnM30rcIiZCtDkFJ7s=\", true, function () {\n  return [useHistory];\n});\n\n_c = SellStock;\nexport default SellStock;\n\nvar _c;\n\n$RefreshReg$(_c, \"SellStock\");","map":{"version":3,"names":["React","useState","useHistory","SellStock","history","userRole","Cookies","get","quantity","setQuantity","price","setPrice","limitPrice","setLimitPrice","limitQuantity","setLimitQuantity","expireDate","setExpireDate","location","useLocation","stock_ticker","state","stock","priceQuery","response","fetch","method","headers","body","JSON","stringify","data","json","handleSellStocks","sellStockUrl","username","localStorage","getItem","parseInt","requestOptions","then","ok","Error","alert","push","catch","error","message","handleSetLimitOrder","setLimitOrderUrl","expire_date","event","target","value","e"],"sources":["/Users/aryemans/stock-trader/stock-trader-backend/stock-trader-backend/ClientApp/src/components/SellStock.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from 'react-router';\n\n\nfunction SellStock() {\n    const history = useHistory();\n    const userRole = Cookies.get('UserRole');\n    const [quantity, setQuantity] = useState(0);\n    const [price, setPrice] = useState(0);\n    const [limitPrice, setLimitPrice] = useState(0);\n    const [limitQuantity, setLimitQuantity] = useState(0);\n    const [expireDate, setExpireDate] = useState('');\n    const location = useLocation();\n    const stock_ticker = location.state.stock;\n\n    priceQuery = async () => {\n        const response = await fetch(`/`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                stock_ticker: stock_ticker\n            })\n        });\n        const data = await response.json();\n        setPrice(data);\n}\n\n    const handleSellStocks = () => {\n        const sellStockUrl = \"/users/sell-stock\";\n        const body = {\n            stock_ticker: stock_ticker,\n            username: localStorage.getItem(\"username\"),\n            quantity: parseInt(quantity),  \n        };\n\n        const headers = {\n            \"Content-Type\": \"application/json\",\n        };\n\n        const requestOptions = {\n            method: \"POST\",\n            headers: headers,\n            body: JSON.stringify(body),\n        };\n\n        fetch(sellStockUrl, requestOptions)\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error(\"Failed to sell stocks\");\n                }\n                if (response.ok) {\n                    alert('Stock sold successfully!');\n                    history.push('/assets');\n                }\n                // handle successful response here\n            })\n            .catch((error) => {\n                alert(error.message);\n            });\n    };\n\n    const handleSetLimitOrder = () => {\n        const setLimitOrderUrl = \"/users/limit-order-sell\";\n        const body = {\n            stock_ticker: stock_ticker,\n            username: localStorage.getItem(\"username\"),\n            quantity: parseInt(quantity),\n            price: limitPrice,\n            expire_date: expireDate   \n        };\n\n        const headers = {\n            \"Content-Type\": \"application/json\",\n        };\n\n        const requestOptions = {\n            method: \"POST\",\n            headers: headers,\n            body: JSON.stringify(body),\n        };\n\n        fetch(setLimitOrderUrl, requestOptions)\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error(\"Failed to set limit order\");\n                }\n                if (response.ok) {\n                    alert('Limit order set successfully!');\n                    history.push('/assets');\n                }\n                // handle successful response here\n            })\n            .catch((error) => {\n                alert(error.message);\n            });\n    };\n\n    if(userRole === \"user\") {\n    return (\n        <div>\n            <h2>Sell Stock {stock_ticker} {price.price}</h2>\n            <form>\n                <label>\n                    Quantity:\n          <input\n                        type=\"number\"\n                        value={quantity}\n                        onChange={(event) => setQuantity(event.target.value)}\n                    />\n                </label>\n                <br />\n                <button onClick={handleSellStocks}>Sell</button>\n            </form>\n            <br />\n            <hr />\n            <h2>Set Limit Order</h2>\n            <form>\n                <br />\n                <label>\n                    Quantity:\n          <input\n                        type=\"number\"\n                        value={limitQuantity}\n                        onChange={(event) => setLimitQuantity(event.target.value)}\n                    />\n                </label>\n                <label>\n                    Price:\n          <input\n                        type=\"number\"\n                        value={limitPrice}\n                        onChange={(event) => setLimitPrice(event.target.value)}\n                    />\n                </label>\n                <label>\n                    Expire Date:\n          <input \n                        type=\"date\"\n                        value={expireDate} \n                        onChange={e => setExpireDate(e.target.value)} \n                    />\n                </label>\n                <br />\n                <button onClick={handleSetLimitOrder}>Set Limit Order</button>\n            </form>\n        </div> );\n    } else {\n        history.push(\"/login\");\n    }\n}\n\nexport default SellStock;"],"mappings":"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"},"metadata":{},"sourceType":"module"}