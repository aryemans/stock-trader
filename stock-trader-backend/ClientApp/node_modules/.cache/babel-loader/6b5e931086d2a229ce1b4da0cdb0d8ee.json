{"ast":null,"code":"var _jsxFileName = \"/Users/aryemans/stock-trader/stock-trader-backend/stock-trader-backend/ClientApp/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport Cookies from 'universal-cookie';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = () => {\n  _s();\n\n  const cookies = new Cookies();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState(\"\");\n  const [pwd, setPwd] = useState(\"\");\n  const [selectedRole, setSelectedRole] = useState('user');\n\n  const handleRoleChange = event => {\n    setSelectedRole(event.target.value);\n  };\n\n  const handleSubmit = async event => {\n    const accountUser = {\n      username: username,\n      pwd: pwd\n    };\n    event.preventDefault(); // Handle form submission based on selected role\n\n    if (selectedRole === 'admin') {\n      console.log(username);\n      console.log(pwd);\n      const response = await fetch(`/auth/admin`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: username,\n          pwd: pwd\n        })\n      });\n      const data = await response.json();\n\n      if (response.ok) {\n        alert('Login successful!');\n        cookies.set('Name', username, {\n          path: '/'\n        });\n        cookies.set('UserRole', \"admin\", {\n          path: '/'\n        });\n        navigate('/');\n      } else {\n        alert(data.message);\n      }\n    } else {\n      // Handle user login\n      //console.log(JSON.stringify({ username: username, pwd: pwd });\n      const response = await fetch(`/auth/user`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: username,\n          pwd: pwd\n        })\n      });\n      const data = await response.json();\n\n      if (response.ok) {\n        alert('Log in successful!');\n        cookies.set('Name', username, {\n          path: '/'\n        });\n        cookies.set('UserRole', \"user\", {\n          path: '/'\n        });\n        navigate('/portfolio');\n      } else {\n        alert(data.message);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select Role\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"radio-label\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"admin\",\n          checked: selectedRole === 'admin',\n          onChange: handleRoleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), \"Admin\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"radio-label\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"user\",\n          checked: selectedRole === 'user',\n          onChange: handleRoleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), \"User\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          onChange: event => setUsername(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          onChange: event => setPwd(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signup\",\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 40\n      }, this), \" now!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginPage, \"PGGmWI8yjdu2oUdC9xhqiLTb8Mc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","Link","Cookies","LoginPage","cookies","navigate","username","setUsername","pwd","setPwd","selectedRole","setSelectedRole","handleRoleChange","event","target","value","handleSubmit","accountUser","preventDefault","console","log","response","fetch","method","headers","body","JSON","stringify","data","json","ok","alert","set","path","message"],"sources":["/Users/aryemans/stock-trader/stock-trader-backend/stock-trader-backend/ClientApp/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport Cookies from 'universal-cookie';\nimport './Login.css';\n\nconst LoginPage = () => {\n   const cookies = new Cookies();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState(\"\");\n  const [pwd, setPwd] = useState(\"\");\n  const [selectedRole, setSelectedRole] = useState('user');\n\n  const handleRoleChange = (event) => {\n    setSelectedRole(event.target.value);\n  };\n\n  const handleSubmit = async (event) => {\n    const accountUser = {\n        username: username,\n        pwd: pwd    \n    };\n    event.preventDefault();\n    // Handle form submission based on selected role\n      if (selectedRole === 'admin') {\n          console.log(username);\n          console.log(pwd);\n        const response = await fetch(`/auth/admin`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ username: username, pwd: pwd })\n        });\n        const data = await response.json();\n        if (response.ok) {\n            alert('Login successful!');\n            cookies.set('Name', username, { path: '/' });\n            cookies.set('UserRole', \"admin\", { path: '/' });\n            navigate('/');\n        } else {\n            alert(data.message);\n        } \n    } else {\n      // Handle user login\n          //console.log(JSON.stringify({ username: username, pwd: pwd });\n      const response = await fetch(`/auth/user`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n          body: JSON.stringify({ username: username, pwd: pwd })\n        });\n       const data = await response.json();\n        if (response.ok) {\n            alert('Log in successful!');\n            cookies.set('Name', username, { path: '/' });\n            cookies.set('UserRole', \"user\", { path: '/' });\n            navigate('/portfolio');\n        } else {\n            alert(data.message);\n        } \n    }\n  };\n\n  return (\n    <div>\n      <h1>Login Page</h1>\n      <div>\n        <h2>Select Role</h2>\n        <label class=\"radio-label\">\n          <input type=\"radio\" value=\"admin\" checked={selectedRole === 'admin'} onChange={handleRoleChange} />\n          Admin\n        </label>\n        <label class=\"radio-label\">\n          <input type=\"radio\" value=\"user\" checked={selectedRole === 'user'} onChange={handleRoleChange} />\n          User\n        </label>\n      </div>\n      <form onSubmit={handleSubmit}>\n        <label>\n                  Username:\n          <input type=\"text\" name=\"username\" onChange={(event) => setUsername(event.target.value)} />\n\n        </label>\n        <br />\n        <label>\n          Password:\n          <input type=\"password\" name=\"password\" onChange={(event) => setPwd(event.target.value)} />\n        </label>\n        <br />\n        <button type=\"submit\">Login</button>\n      </form>\n      <p>\n                Don't have an account? <Link to=\"/signup\">Sign up</Link> now!\n      </p>\n    </div>\n  );\n};\n\nexport default LoginPage;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}